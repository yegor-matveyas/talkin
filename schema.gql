# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AuthCredentials {
  accessToken: String!
  expiresAt: DateTime!
  refreshToken: String!
}

input AuthInput {
  password: String!
  username: String!
}

input CreateUserInput {
  email: String!
  password: String!
  username: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Message {
  id: Int!
  messageId: UUID!
  nodes: [MessageNode!]!
}

type MessageNode {
  id: Int!
  link: String
  mention: User
  message: Message!
  nodeType: MessageNodeType!
  style: MessageNodeStyle
  text: String
}

enum MessageNodeStyle {
  BOLD
  ITALIC
}

enum MessageNodeType {
  LINK
  MENTION
  TEXT
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  login(authInput: AuthInput!): AuthCredentials!
  logout: Boolean!
  refreshTokens: AuthCredentials!
}

type Query {
  me: User!
  user(where: UserWhereUniqueInput!): User!
  users(where: UsersWhereInput): [User!]
}

"""A simple UUID parser"""
scalar UUID

type User {
  email: String!
  id: Int!
  userId: UUID!
  username: String!
}

input UserWhereUniqueInput {
  userId: UUID!
}

input UsersWhereInput {
  username: String
}